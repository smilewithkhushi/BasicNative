{"version":3,"sources":["../../../src/utils/editor.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport editors from 'env-editor';\n\nimport { env } from './env';\nimport * as Log from '../log';\n\nconst debug = require('debug')('expo:utils:editor') as typeof console.log;\n\n/** Guess what the default editor is and default to VSCode. */\nexport function guessEditor(): editors.Editor {\n  try {\n    const editor = env.EXPO_EDITOR;\n    if (editor) {\n      debug('Using $EXPO_EDITOR:', editor);\n      return editors.getEditor(editor);\n    }\n    debug('Falling back on $EDITOR:', editor);\n    return editors.defaultEditor();\n  } catch {\n    debug('Falling back on vscode');\n    return editors.getEditor('vscode');\n  }\n}\n\n/** Open a file path in a given editor. */\nexport async function openInEditorAsync(path: string): Promise<boolean> {\n  const editor = guessEditor();\n\n  debug(`Opening ${path} in ${editor?.name} (bin: ${editor?.binary}, id: ${editor?.id})`);\n  if (editor) {\n    try {\n      await spawnAsync(editor.binary, [path]);\n      return true;\n    } catch (error: any) {\n      debug(`Failed to auto open path in editor (path: ${path}, binary: ${editor.binary}):`, error);\n    }\n  }\n\n  Log.error(\n    'Could not open editor, you can set it by defining the $EDITOR environment variable with the binary of your editor. (e.g. \"vscode\" or \"atom\")'\n  );\n  return false;\n}\n"],"names":["guessEditor","openInEditorAsync","debug","require","editor","env","EXPO_EDITOR","editors","getEditor","defaultEditor","path","name","binary","id","spawnAsync","error","Log"],"mappings":"AAAA;;;;;;;;;;;IASgBA,WAAW,MAAXA,WAAW;IAgBLC,iBAAiB,MAAjBA,iBAAiB;;;8DAzBhB,mBAAmB;;;;;;;8DACtB,YAAY;;;;;;qBAEZ,OAAO;2DACN,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE7B,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,mBAAmB,CAAC,AAAsB,AAAC;AAGnE,SAASH,WAAW,GAAmB;IAC5C,IAAI;QACF,MAAMI,MAAM,GAAGC,IAAG,IAAA,CAACC,WAAW,AAAC;QAC/B,IAAIF,MAAM,EAAE;YACVF,KAAK,CAAC,qBAAqB,EAAEE,MAAM,CAAC,CAAC;YACrC,OAAOG,UAAO,EAAA,QAAA,CAACC,SAAS,CAACJ,MAAM,CAAC,CAAC;QACnC,CAAC;QACDF,KAAK,CAAC,0BAA0B,EAAEE,MAAM,CAAC,CAAC;QAC1C,OAAOG,UAAO,EAAA,QAAA,CAACE,aAAa,EAAE,CAAC;IACjC,EAAE,OAAM;QACNP,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAChC,OAAOK,UAAO,EAAA,QAAA,CAACC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;AACH,CAAC;AAGM,eAAeP,iBAAiB,CAACS,IAAY,EAAoB;IACtE,MAAMN,MAAM,GAAGJ,WAAW,EAAE,AAAC;IAE7BE,KAAK,CAAC,CAAC,QAAQ,EAAEQ,IAAI,CAAC,IAAI,EAAEN,MAAM,QAAM,GAAZA,KAAAA,CAAY,GAAZA,MAAM,CAAEO,IAAI,CAAC,OAAO,EAAEP,MAAM,QAAQ,GAAdA,KAAAA,CAAc,GAAdA,MAAM,CAAEQ,MAAM,CAAC,MAAM,EAAER,MAAM,QAAI,GAAVA,KAAAA,CAAU,GAAVA,MAAM,CAAES,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,IAAIT,MAAM,EAAE;QACV,IAAI;YACF,MAAMU,IAAAA,WAAU,EAAA,QAAA,EAACV,MAAM,CAACQ,MAAM,EAAE;gBAACF,IAAI;aAAC,CAAC,CAAC;YACxC,OAAO,IAAI,CAAC;QACd,EAAE,OAAOK,KAAK,EAAO;YACnBb,KAAK,CAAC,CAAC,0CAA0C,EAAEQ,IAAI,CAAC,UAAU,EAAEN,MAAM,CAACQ,MAAM,CAAC,EAAE,CAAC,EAAEG,KAAK,CAAC,CAAC;QAChG,CAAC;IACH,CAAC;IAEDC,IAAG,CAACD,KAAK,CACP,8IAA8I,CAC/I,CAAC;IACF,OAAO,KAAK,CAAC;AACf,CAAC"}