{"version":3,"sources":["../../../../../src/start/server/metro/metroErrorInterface.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport chalk from 'chalk';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { StackFrame } from 'stacktrace-parser';\nimport terminalLink from 'terminal-link';\n\nimport { Log } from '../../../log';\nimport { stripAnsi } from '../../../utils/ansi';\nimport { CommandError, SilentError } from '../../../utils/errors';\nimport { createMetroEndpointAsync } from '../getStaticRenderFunctions';\n\ntype CodeFrame = {\n  content: string;\n  location?: {\n    row: number;\n    column: number;\n    [key: string]: any;\n  };\n  fileName: string;\n};\n\ntype MetroStackFrame = StackFrame & { collapse?: boolean };\n\nfunction fill(width: number): string {\n  return Array(width).join(' ');\n}\n\nfunction formatPaths(config: { filePath: string | null; line?: number; col?: number }) {\n  const filePath = chalk.reset(config.filePath);\n  return (\n    chalk.dim('(') +\n    filePath +\n    chalk.dim(`:${[config.line, config.col].filter(Boolean).join(':')})`)\n  );\n}\n\nexport async function logMetroErrorWithStack(\n  projectRoot: string,\n  {\n    stack,\n    codeFrame,\n    error,\n  }: {\n    stack: MetroStackFrame[];\n    codeFrame: CodeFrame;\n    error: Error;\n  }\n) {\n  if (error instanceof SilentError) {\n    return;\n  }\n\n  // process.stdout.write('\\u001b[0m'); // Reset attributes\n  // process.stdout.write('\\u001bc'); // Reset the terminal\n\n  const { getStackFormattedLocation } = require(\n    resolveFrom(projectRoot, '@expo/metro-runtime/symbolicate')\n  );\n\n  Log.log();\n  Log.log(chalk.red('Metro error: ') + error.message);\n  Log.log();\n\n  if (error instanceof CommandError) {\n    return;\n  }\n\n  if (codeFrame) {\n    const maxWarningLineLength = Math.max(200, process.stdout.columns);\n\n    const lineText = codeFrame.content;\n    const isPreviewTooLong = codeFrame.content\n      .split('\\n')\n      .some((line) => line.length > maxWarningLineLength);\n    const column = codeFrame.location?.column;\n    // When the preview is too long, we skip reading the file and attempting to apply\n    // code coloring, this is because it can get very slow.\n    if (isPreviewTooLong) {\n      let previewLine = '';\n      let cursorLine = '';\n\n      const formattedPath = formatPaths({\n        filePath: codeFrame.fileName,\n        line: codeFrame.location?.row,\n        col: codeFrame.location?.column,\n      });\n      // Create a curtailed preview line like:\n      // `...transition:'fade'},k._updatePropsStack=function(){clearImmediate(k._updateImmediate),k._updateImmediate...`\n      // If there is no text preview or column number, we can't do anything.\n      if (lineText && column != null) {\n        const rangeWindow = Math.round(\n          Math.max(codeFrame.fileName?.length ?? 0, Math.max(80, process.stdout.columns)) / 2\n        );\n        let minBounds = Math.max(0, column - rangeWindow);\n        const maxBounds = Math.min(minBounds + rangeWindow * 2, lineText.length);\n        previewLine = lineText.slice(minBounds, maxBounds);\n\n        // If we splice content off the start, then we should append `...`.\n        // This is unlikely to happen since we limit the activation size.\n        if (minBounds > 0) {\n          // Adjust the min bounds so the cursor is aligned after we add the \"...\"\n          minBounds -= 3;\n          previewLine = chalk.dim('...') + previewLine;\n        }\n        if (maxBounds < lineText.length) {\n          previewLine += chalk.dim('...');\n        }\n\n        // If the column property could be found, then use that to fix the cursor location which is often broken in regex.\n        cursorLine = (column == null ? '' : fill(column) + chalk.reset('^')).slice(minBounds);\n\n        Log.log(\n          [formattedPath, '', previewLine, cursorLine, chalk.dim('(error truncated)')].join('\\n')\n        );\n      }\n    } else {\n      Log.log(codeFrame.content);\n    }\n  }\n\n  if (stack?.length) {\n    Log.log();\n    Log.log(chalk.bold`Call Stack`);\n\n    const stackProps = stack.map((frame) => {\n      return {\n        title: frame.methodName,\n        subtitle: getStackFormattedLocation(projectRoot, frame),\n        collapse: frame.collapse,\n      };\n    });\n\n    stackProps.forEach((frame) => {\n      const position = terminalLink.isSupported\n        ? terminalLink(frame.subtitle, frame.subtitle)\n        : frame.subtitle;\n      let lineItem = chalk.gray(`  ${frame.title} (${position})`);\n      if (frame.collapse) {\n        lineItem = chalk.dim(lineItem);\n      }\n      Log.log(lineItem);\n    });\n  } else {\n    Log.log(chalk.gray(`  ${error.stack}`));\n  }\n}\n\nexport async function logMetroError(projectRoot: string, { error }: { error: Error }) {\n  if (error instanceof SilentError) {\n    return;\n  }\n\n  const { LogBoxLog, parseErrorStack } = require(\n    resolveFrom(projectRoot, '@expo/metro-runtime/symbolicate')\n  );\n\n  const stack = parseErrorStack(error.stack);\n\n  const log = new LogBoxLog({\n    level: 'static',\n    message: {\n      content: error.message,\n      substitutions: [],\n    },\n    isComponentError: false,\n    stack,\n    category: 'static',\n    componentStack: [],\n  });\n\n  await new Promise((res) => log.symbolicate('stack', res));\n\n  logMetroErrorWithStack(projectRoot, {\n    stack: log.symbolicated?.stack?.stack ?? [],\n    codeFrame: log.codeFrame,\n    error,\n  });\n}\n\nfunction isTransformError(\n  error: any\n): error is { type: 'TransformError'; filename: string; lineNumber: number; column: number } {\n  return error.type === 'TransformError';\n}\n\n/** @returns the html required to render the static metro error as an SPA. */\nfunction logFromError({ error, projectRoot }: { error: Error; projectRoot: string }): {\n  symbolicated: any;\n  symbolicate: (type: string, callback: () => void) => void;\n  codeFrame: CodeFrame;\n} {\n  const { LogBoxLog, parseErrorStack } = require(\n    resolveFrom(projectRoot, '@expo/metro-runtime/symbolicate')\n  );\n\n  // Remap direct Metro Node.js errors to a format that will appear more client-friendly in the logbox UI.\n  let stack;\n  if (isTransformError(error)) {\n    // Syntax errors in static rendering.\n    stack = [\n      {\n        file: path.join(projectRoot, error.filename),\n        methodName: '<unknown>',\n        arguments: [],\n        // TODO: Import stack\n        lineNumber: error.lineNumber,\n        column: error.column,\n      },\n    ];\n  } else if ('originModulePath' in error) {\n    // TODO: Use import stack here when the error is resolution based.\n    stack = [\n      {\n        file: error.originModulePath,\n        methodName: '<unknown>',\n        arguments: [],\n        // TODO: Import stack\n        lineNumber: 0,\n        column: 0,\n      },\n    ];\n  } else {\n    stack = parseErrorStack(error.stack);\n  }\n\n  return new LogBoxLog({\n    level: 'static',\n    message: {\n      content: error.message,\n      substitutions: [],\n    },\n    isComponentError: false,\n    stack,\n    category: 'static',\n    componentStack: [],\n  });\n}\n\n/** @returns the html required to render the static metro error as an SPA. */\nexport async function logMetroErrorAsync({\n  error,\n  projectRoot,\n}: {\n  error: Error;\n  projectRoot: string;\n}) {\n  const log = logFromError({ projectRoot, error });\n\n  await new Promise<void>((res) => log.symbolicate('stack', res));\n\n  logMetroErrorWithStack(projectRoot, {\n    stack: log.symbolicated?.stack?.stack ?? [],\n    codeFrame: log.codeFrame,\n    error,\n  });\n}\n\n/** @returns the html required to render the static metro error as an SPA. */\nexport async function getErrorOverlayHtmlAsync({\n  error,\n  projectRoot,\n  routerRoot,\n}: {\n  error: Error;\n  projectRoot: string;\n  routerRoot: string;\n}) {\n  const log = logFromError({ projectRoot, error });\n\n  await new Promise<void>((res) => log.symbolicate('stack', res));\n\n  logMetroErrorWithStack(projectRoot, {\n    stack: log.symbolicated?.stack?.stack ?? [],\n    codeFrame: log.codeFrame,\n    error,\n  });\n\n  // @ts-expect-error\n  if ('message' in log && 'content' in log.message && typeof log.message.content === 'string') {\n    log.message.content = stripAnsi(log.message.content);\n  }\n\n  const logBoxContext = {\n    selectedLogIndex: 0,\n    isDisabled: false,\n    logs: [log],\n  };\n  const html = `<html><head><style>#root,body,html{height:100%}body{overflow:hidden}#root{display:flex}</style></head><body><div id=\"root\"></div><script id=\"_expo-static-error\" type=\"application/json\">${JSON.stringify(\n    logBoxContext\n  )}</script></body></html>`;\n\n  const errorOverlayEntry = await createMetroEndpointAsync(\n    projectRoot,\n    // Keep the URL relative\n    '',\n    resolveFrom(projectRoot, 'expo-router/_error'),\n    {\n      mode: 'development',\n      platform: 'web',\n      minify: false,\n      baseUrl: '',\n      routerRoot,\n      isExporting: false,\n      reactCompiler: false,\n    }\n  );\n\n  const htmlWithJs = html.replace('</body>', `<script src=${errorOverlayEntry}></script></body>`);\n  return htmlWithJs;\n}\n"],"names":["logMetroErrorWithStack","logMetroError","logMetroErrorAsync","getErrorOverlayHtmlAsync","fill","width","Array","join","formatPaths","config","filePath","chalk","reset","dim","line","col","filter","Boolean","projectRoot","stack","codeFrame","error","SilentError","getStackFormattedLocation","require","resolveFrom","Log","log","red","message","CommandError","maxWarningLineLength","Math","max","process","stdout","columns","lineText","content","isPreviewTooLong","split","some","length","column","location","previewLine","cursorLine","formattedPath","fileName","row","rangeWindow","round","minBounds","maxBounds","min","slice","bold","stackProps","map","frame","title","methodName","subtitle","collapse","forEach","position","terminalLink","isSupported","lineItem","gray","LogBoxLog","parseErrorStack","level","substitutions","isComponentError","category","componentStack","Promise","res","symbolicate","symbolicated","isTransformError","type","logFromError","file","path","filename","arguments","lineNumber","originModulePath","routerRoot","stripAnsi","logBoxContext","selectedLogIndex","isDisabled","logs","html","JSON","stringify","errorOverlayEntry","createMetroEndpointAsync","mode","platform","minify","baseUrl","isExporting","reactCompiler","htmlWithJs","replace"],"mappings":"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"}