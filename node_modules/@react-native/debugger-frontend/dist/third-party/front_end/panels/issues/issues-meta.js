import*as e from"../../core/common/common.js";import*as s from"../../core/root/root.js";import*as i from"../../models/issues_manager/issues_manager.js";import*as o from"../../ui/legacy/legacy.js";import*as a from"../../core/i18n/i18n.js";const n={issues:"Issues",showIssues:"Show Issues",cspViolations:"CSP Violations",showCspViolations:"Show CSP Violations"},t=a.i18n.registerUIStrings("panels/issues/issues-meta.ts",n),r=a.i18n.getLazilyComputedLocalizedString.bind(void 0,t);let l;async function m(){return l||(l=await import("./issues.js")),l}o.ViewManager.registerViewExtension({location:"drawer-view",id:"issues-pane",title:r(n.issues),commandPrompt:r(n.showIssues),order:100,persistence:"closeable",loadView:async()=>(await m()).IssuesPane.IssuesPane.instance()}),o.ViewManager.registerViewExtension({location:"drawer-view",id:"csp-violations-pane",title:r(n.cspViolations),commandPrompt:r(n.showCspViolations),order:100,persistence:"closeable",loadView:async()=>(await m()).CSPViolationsView.CSPViolationsView.instance(),experiment:s.Runtime.ExperimentName.CSP_VIOLATIONS_VIEW}),e.Revealer.registerRevealer({contextTypes:()=>[i.Issue.Issue],destination:e.Revealer.RevealerDestination.ISSUES_VIEW,loadRevealer:async()=>(await m()).IssueRevealer.IssueRevealer.instance()});
