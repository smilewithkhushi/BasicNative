{"version":3,"sources":["../../../src/export/getPublicExpoManifest.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\n\nimport { LocaleMap, getResolvedLocalesAsync } from './getResolvedLocales';\nimport { env } from '../utils/env';\nimport { CommandError } from '../utils/errors';\n\n/** Get the public Expo manifest from the local project config. */\nexport async function getPublicExpoManifestAsync(\n  projectRoot: string,\n  { skipValidation }: { skipValidation?: boolean } = {}\n): Promise<ExpoConfig & { locales: LocaleMap; sdkVersion: string }> {\n  // Read the config in public mode which strips the `hooks`.\n  const { exp } = getConfig(projectRoot, {\n    isPublicConfig: true,\n    // This shouldn't be needed since the CLI is vendored in `expo`.\n    skipSDKVersionRequirement: true,\n  });\n\n  // Only allow projects to be published with UNVERSIONED if a correct token is set in env\n  if (\n    !skipValidation &&\n    exp.sdkVersion === 'UNVERSIONED' &&\n    !env.EXPO_SKIP_MANIFEST_VALIDATION_TOKEN\n  ) {\n    throw new CommandError('INVALID_OPTIONS', 'Cannot publish with sdkVersion UNVERSIONED.');\n  }\n\n  return {\n    ...exp,\n    locales: await getResolvedLocalesAsync(projectRoot, exp),\n    sdkVersion: exp.sdkVersion!,\n  };\n}\n"],"names":["getPublicExpoManifestAsync","projectRoot","skipValidation","exp","getConfig","isPublicConfig","skipSDKVersionRequirement","sdkVersion","env","EXPO_SKIP_MANIFEST_VALIDATION_TOKEN","CommandError","locales","getResolvedLocalesAsync"],"mappings":"AAAA;;;;+BAOsBA,4BAA0B;;aAA1BA,0BAA0B;;;yBAPV,cAAc;;;;;;oCAED,sBAAsB;qBACrD,cAAc;wBACL,iBAAiB;AAGvC,eAAeA,0BAA0B,CAC9CC,WAAmB,EACnB,EAAEC,cAAc,CAAA,EAAgC,GAAG,EAAE,EACa;IAClE,2DAA2D;IAC3D,MAAM,EAAEC,GAAG,CAAA,EAAE,GAAGC,IAAAA,OAAS,EAAA,UAAA,EAACH,WAAW,EAAE;QACrCI,cAAc,EAAE,IAAI;QACpB,gEAAgE;QAChEC,yBAAyB,EAAE,IAAI;KAChC,CAAC,AAAC;IAEH,wFAAwF;IACxF,IACE,CAACJ,cAAc,IACfC,GAAG,CAACI,UAAU,KAAK,aAAa,IAChC,CAACC,IAAG,IAAA,CAACC,mCAAmC,EACxC;QACA,MAAM,IAAIC,OAAY,aAAA,CAAC,iBAAiB,EAAE,6CAA6C,CAAC,CAAC;IAC3F,CAAC;IAED,OAAO;QACL,GAAGP,GAAG;QACNQ,OAAO,EAAE,MAAMC,IAAAA,mBAAuB,wBAAA,EAACX,WAAW,EAAEE,GAAG,CAAC;QACxDI,UAAU,EAAEJ,GAAG,CAACI,UAAU;KAC3B,CAAC;AACJ,CAAC"}