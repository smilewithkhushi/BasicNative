{"version":3,"sources":["../../../src/export/exportStaticAsync.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ExpoConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport { RouteNode } from 'expo-router/build/Route';\nimport { stripGroupSegmentsFromPath } from 'expo-router/build/matchers';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { inspect } from 'util';\n\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { persistMetroAssetsAsync } from './persistMetroAssets';\nimport { ExportAssetMap, getFilesFromSerialAssets } from './saveAssets';\nimport { Log } from '../log';\nimport {\n  ExpoRouterRuntimeManifest,\n  MetroBundlerDevServer,\n} from '../start/server/metro/MetroBundlerDevServer';\nimport { ExpoRouterServerManifestV1 } from '../start/server/metro/fetchRouterManifest';\nimport { logMetroErrorAsync } from '../start/server/metro/metroErrorInterface';\nimport { getApiRoutesForDirectory } from '../start/server/metro/router';\nimport { serializeHtmlWithAssets } from '../start/server/metro/serializeHtml';\nimport { learnMore } from '../utils/link';\n\nconst debug = require('debug')('expo:export:generateStaticRoutes') as typeof console.log;\n\ntype Options = {\n  mode: 'production' | 'development';\n  files?: ExportAssetMap;\n  outputDir: string;\n  minify: boolean;\n  exportServer: boolean;\n  baseUrl: string;\n  includeSourceMaps: boolean;\n  entryPoint?: string;\n  clear: boolean;\n  routerRoot: string;\n  reactCompiler: boolean;\n  maxWorkers?: number;\n  isExporting: boolean;\n  exp?: ExpoConfig;\n};\n\ntype HtmlRequestLocation = {\n  /** The output file path name to use relative to the static folder. */\n  filePath: string;\n  /** The pathname to make requests to in order to fetch the HTML. */\n  pathname: string;\n  /** The runtime route node object, used to associate async modules with the static HTML. */\n  route: RouteNode;\n};\n\n/** Match `(page)` -> `page` */\nfunction matchGroupName(name: string): string | undefined {\n  return name.match(/^\\(([^/]+?)\\)$/)?.[1];\n}\n\nexport async function getFilesToExportFromServerAsync(\n  projectRoot: string,\n  {\n    manifest,\n    renderAsync,\n    // Servers can handle group routes automatically and therefore\n    // don't require the build-time generation of every possible group\n    // variation.\n    exportServer,\n    // name : contents\n    files = new Map(),\n  }: {\n    manifest: ExpoRouterRuntimeManifest;\n    renderAsync: (requestLocation: HtmlRequestLocation) => Promise<string>;\n    exportServer?: boolean;\n    files?: ExportAssetMap;\n  }\n): Promise<ExportAssetMap> {\n  await Promise.all(\n    getHtmlFiles({ manifest, includeGroupVariations: !exportServer }).map(\n      async ({ route, filePath, pathname }) => {\n        try {\n          const targetDomain = exportServer ? 'server' : 'client';\n          files.set(filePath, { contents: '', targetDomain });\n          const data = await renderAsync({ route, filePath, pathname });\n          files.set(filePath, {\n            contents: data,\n            routeId: pathname,\n            targetDomain,\n          });\n        } catch (e: any) {\n          await logMetroErrorAsync({ error: e, projectRoot });\n          throw new Error('Failed to statically export route: ' + pathname);\n        }\n      }\n    )\n  );\n\n  return files;\n}\n\nfunction modifyRouteNodeInRuntimeManifest(\n  manifest: ExpoRouterRuntimeManifest,\n  callback: (route: RouteNode) => any\n) {\n  const iterateScreens = (screens: ExpoRouterRuntimeManifest['screens']) => {\n    Object.values(screens).map((value) => {\n      if (typeof value !== 'string') {\n        if (value._route) callback(value._route);\n        iterateScreens(value.screens);\n      }\n    });\n  };\n\n  iterateScreens(manifest.screens);\n}\n\n// TODO: Do this earlier in the process.\nfunction makeRuntimeEntryPointsAbsolute(manifest: ExpoRouterRuntimeManifest, appDir: string) {\n  modifyRouteNodeInRuntimeManifest(manifest, (route) => {\n    if (Array.isArray(route.entryPoints)) {\n      route.entryPoints = route.entryPoints.map((entryPoint) => {\n        if (entryPoint.startsWith('.')) {\n          return path.resolve(appDir, entryPoint);\n        } else if (!path.isAbsolute(entryPoint)) {\n          return resolveFrom(appDir, entryPoint);\n        }\n        return entryPoint;\n      });\n    }\n  });\n}\n\n/** Perform all fs commits */\nexport async function exportFromServerAsync(\n  projectRoot: string,\n  devServer: MetroBundlerDevServer,\n  {\n    outputDir,\n    baseUrl,\n    exportServer,\n    includeSourceMaps,\n    routerRoot,\n    files = new Map(),\n    exp,\n  }: Options\n): Promise<ExportAssetMap> {\n  Log.log(\n    `Static rendering is enabled. ` +\n      learnMore('https://docs.expo.dev/router/reference/static-rendering/')\n  );\n\n  const platform = 'web';\n  const isExporting = true;\n  const appDir = path.join(projectRoot, routerRoot);\n  const injectFaviconTag = await getVirtualFaviconAssetsAsync(projectRoot, {\n    outputDir,\n    baseUrl,\n    files,\n    exp,\n  });\n\n  const [resources, { manifest, serverManifest, renderAsync }] = await Promise.all([\n    devServer.getStaticResourcesAsync({\n      includeSourceMaps,\n    }),\n    devServer.getStaticRenderFunctionAsync(),\n  ]);\n\n  makeRuntimeEntryPointsAbsolute(manifest, appDir);\n\n  debug('Routes:\\n', inspect(manifest, { colors: true, depth: null }));\n\n  await getFilesToExportFromServerAsync(projectRoot, {\n    files,\n    manifest,\n    exportServer,\n    async renderAsync({ pathname, route }) {\n      const template = await renderAsync(pathname);\n      let html = await serializeHtmlWithAssets({\n        isExporting,\n        resources: resources.artifacts,\n        template,\n        baseUrl,\n        route,\n      });\n\n      if (injectFaviconTag) {\n        html = injectFaviconTag(html);\n      }\n\n      return html;\n    },\n  });\n\n  getFilesFromSerialAssets(resources.artifacts, {\n    platform,\n    includeSourceMaps,\n    files,\n  });\n\n  if (resources.assets) {\n    // TODO: Collect files without writing to disk.\n    // NOTE(kitten): Re. above, this is now using `files` except for iOS catalog output, which isn't used here\n    await persistMetroAssetsAsync(resources.assets, {\n      files,\n      platform,\n      outputDirectory: outputDir,\n      baseUrl,\n    });\n  }\n\n  if (exportServer) {\n    const apiRoutes = await exportApiRoutesAsync({\n      outputDir,\n      server: devServer,\n      manifest: serverManifest,\n      // NOTE(kitten): For now, we always output source maps for API route exports\n      includeSourceMaps: true,\n    });\n\n    // Add the api routes to the files to export.\n    for (const [route, contents] of apiRoutes) {\n      files.set(route, contents);\n    }\n  } else {\n    warnPossibleInvalidExportType(appDir);\n  }\n\n  return files;\n}\n\nexport function getHtmlFiles({\n  manifest,\n  includeGroupVariations,\n}: {\n  manifest: ExpoRouterRuntimeManifest;\n  includeGroupVariations?: boolean;\n}): HtmlRequestLocation[] {\n  const htmlFiles = new Set<Omit<HtmlRequestLocation, 'pathname'>>();\n\n  function traverseScreens(\n    screens: ExpoRouterRuntimeManifest['screens'],\n    route: RouteNode | null,\n    baseUrl = ''\n  ) {\n    for (const value of Object.values(screens)) {\n      let leaf: string | null = null;\n      if (typeof value === 'string') {\n        leaf = value;\n      } else if (Object.keys(value.screens).length === 0) {\n        leaf = value.path;\n        route = value._route ?? null;\n      }\n\n      if (leaf != null) {\n        let filePath = baseUrl + leaf;\n\n        if (leaf === '') {\n          filePath =\n            baseUrl === ''\n              ? 'index'\n              : baseUrl.endsWith('/')\n                ? baseUrl + 'index'\n                : baseUrl.slice(0, -1);\n        } else if (\n          // If the path is a collection of group segments leading to an index route, append `/index`.\n          stripGroupSegmentsFromPath(filePath) === ''\n        ) {\n          filePath += '/index';\n        }\n\n        // This should never happen, the type of `string | object` originally comes from React Navigation.\n        if (!route) {\n          throw new Error(\n            `Internal error: Route not found for \"${filePath}\" while collecting static export paths.`\n          );\n        }\n\n        if (includeGroupVariations) {\n          // TODO: Dedupe requests for alias routes.\n          addOptionalGroups(filePath, route);\n        } else {\n          htmlFiles.add({\n            filePath,\n            route,\n          });\n        }\n      } else if (typeof value === 'object' && value?.screens) {\n        const newPath = baseUrl + value.path + '/';\n        traverseScreens(value.screens, value._route ?? null, newPath);\n      }\n    }\n  }\n\n  function addOptionalGroups(path: string, route: RouteNode) {\n    const variations = getPathVariations(path);\n    for (const variation of variations) {\n      htmlFiles.add({ filePath: variation, route });\n    }\n  }\n\n  traverseScreens(manifest.screens, null);\n\n  return uniqueBy(Array.from(htmlFiles), (value) => value.filePath).map((value) => {\n    const parts = value.filePath.split('/');\n    // Replace `:foo` with `[foo]` and `*foo` with `[...foo]`\n    const partsWithGroups = parts.map((part) => {\n      if (part === '*not-found') {\n        return `+not-found`;\n      } else if (part.startsWith(':')) {\n        return `[${part.slice(1)}]`;\n      } else if (part.startsWith('*')) {\n        return `[...${part.slice(1)}]`;\n      }\n      return part;\n    });\n    const filePathLocation = partsWithGroups.join('/');\n    const filePath = filePathLocation + '.html';\n    return {\n      ...value,\n      filePath,\n      pathname: filePathLocation.replace(/(\\/?index)?$/, ''),\n    };\n  });\n}\n\nfunction uniqueBy<T>(array: T[], key: (value: T) => string): T[] {\n  const seen = new Set<string>();\n  const result: T[] = [];\n  for (const value of array) {\n    const id = key(value);\n    if (!seen.has(id)) {\n      seen.add(id);\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n// Given a route like `(foo)/bar/(baz)`, return all possible variations of the route.\n// e.g. `(foo)/bar/(baz)`, `(foo)/bar/baz`, `foo/bar/(baz)`, `foo/bar/baz`,\nexport function getPathVariations(routePath: string): string[] {\n  const variations = new Set<string>();\n  const segments = routePath.split('/');\n\n  function generateVariations(segments: string[], current = ''): void {\n    if (segments.length === 0) {\n      if (current) variations.add(current);\n      return;\n    }\n\n    const [head, ...rest] = segments;\n\n    if (matchGroupName(head)) {\n      const groups = head.slice(1, -1).split(',');\n\n      if (groups.length > 1) {\n        for (const group of groups) {\n          // If there are multiple groups, recurse on each group.\n          generateVariations([`(${group.trim()})`, ...rest], current);\n        }\n        return;\n      } else {\n        // Start a fork where this group is included\n        generateVariations(rest, current ? `${current}/(${groups[0]})` : `(${groups[0]})`);\n        // This code will continue and add paths without this group included`\n      }\n    } else if (current) {\n      current = `${current}/${head}`;\n    } else {\n      current = head;\n    }\n\n    generateVariations(rest, current);\n  }\n\n  generateVariations(segments);\n\n  return Array.from(variations);\n}\n\nasync function exportApiRoutesAsync({\n  includeSourceMaps,\n  outputDir,\n  server,\n  ...props\n}: Pick<Options, 'outputDir' | 'includeSourceMaps'> & {\n  server: MetroBundlerDevServer;\n  manifest: ExpoRouterServerManifestV1;\n}): Promise<ExportAssetMap> {\n  const { manifest, files } = await server.exportExpoRouterApiRoutesAsync({\n    outputDir: '_expo/functions',\n    prerenderManifest: props.manifest,\n    includeSourceMaps,\n  });\n\n  Log.log(chalk.bold`Exporting ${files.size} API Routes.`);\n\n  files.set('_expo/routes.json', {\n    contents: JSON.stringify(manifest, null, 2),\n    targetDomain: 'server',\n  });\n\n  return files;\n}\n\nfunction warnPossibleInvalidExportType(appDir: string) {\n  const apiRoutes = getApiRoutesForDirectory(appDir);\n  if (apiRoutes.length) {\n    // TODO: Allow API Routes for native-only.\n    Log.warn(\n      chalk.yellow`Skipping export for API routes because \\`web.output\\` is not \"server\". You may want to remove the routes: ${apiRoutes\n        .map((v) => path.relative(appDir, v))\n        .join(', ')}`\n    );\n  }\n}\n"],"names":["getFilesToExportFromServerAsync","exportFromServerAsync","getHtmlFiles","getPathVariations","debug","require","matchGroupName","name","match","projectRoot","manifest","renderAsync","exportServer","files","Map","Promise","all","includeGroupVariations","map","route","filePath","pathname","targetDomain","set","contents","data","routeId","e","logMetroErrorAsync","error","Error","modifyRouteNodeInRuntimeManifest","callback","iterateScreens","screens","Object","values","value","_route","makeRuntimeEntryPointsAbsolute","appDir","Array","isArray","entryPoints","entryPoint","startsWith","path","resolve","isAbsolute","resolveFrom","devServer","outputDir","baseUrl","includeSourceMaps","routerRoot","exp","Log","log","learnMore","platform","isExporting","join","injectFaviconTag","getVirtualFaviconAssetsAsync","resources","serverManifest","getStaticResourcesAsync","getStaticRenderFunctionAsync","inspect","colors","depth","template","html","serializeHtmlWithAssets","artifacts","getFilesFromSerialAssets","assets","persistMetroAssetsAsync","outputDirectory","apiRoutes","exportApiRoutesAsync","server","warnPossibleInvalidExportType","htmlFiles","Set","traverseScreens","leaf","keys","length","endsWith","slice","stripGroupSegmentsFromPath","addOptionalGroups","add","newPath","variations","variation","uniqueBy","from","parts","split","partsWithGroups","part","filePathLocation","replace","array","key","seen","result","id","has","push","routePath","segments","generateVariations","current","head","rest","groups","group","trim","props","exportExpoRouterApiRoutesAsync","prerenderManifest","chalk","bold","size","JSON","stringify","getApiRoutesForDirectory","warn","yellow","v","relative"],"mappings":"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"}