{"version":3,"sources":["../../../../../src/run/ios/options/appleDestinations.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\n\nimport { Log } from '../../../log';\nimport { OSType } from '../../../start/platforms/ios/simctl';\nimport * as SimControl from '../../../start/platforms/ios/simctl';\nimport { BuildProps } from '../XcodeBuild.types';\nimport * as AppleDevice from '../appleDevice/AppleDevice';\n\nconst debug = require('debug')('expo:apple-destination') as typeof console.log;\n\ninterface Destination {\n  // 'visionOS'\n  platform: string;\n  // 'arm64'\n  arch?: string;\n  // 'Designed for [iPad,iPhone]'\n  variant?: string;\n  // '00008112-001A20EC1E78A01E'\n  id: string;\n  // 'Apple Vision Pro'\n  name: string;\n  // Available in simulators\n  OS?: string;\n}\n\nfunction coerceDestinationPlatformToOsType(platform: string): OSType {\n  // The only two devices I have to test against...\n  switch (platform) {\n    case 'iOS':\n      return 'iOS';\n    case 'xrOS':\n    case 'visionOS':\n      return 'xrOS';\n    case 'macOS':\n      return 'macOS';\n    default:\n      debug('Unknown destination platform (needs to be added to Expo CLI):', platform);\n      return platform as OSType;\n  }\n}\n\n// Runs `.filter(Boolean)` on the array with correct types.\nfunction filterBoolean<T>(array: (T | null | undefined)[]): T[] {\n  return array.filter(Boolean) as T[];\n}\n\nfunction warnDestinationObject(obj: any): Destination | null {\n  if (!obj || typeof obj !== 'object') {\n    return null;\n  }\n\n  if ('platform' in obj && 'id' in obj && 'name' in obj) {\n    return obj;\n  }\n  Log.warn('Unexpected xcode destination object:', obj);\n  return null;\n}\n\nfunction parseXcodeDestinationString(str: string): Destination[] {\n  const parsedLines = filterBoolean(\n    str\n      .trim()\n      .split('\\n')\n      .map((line: string) => {\n        line = line.trim();\n        return line.startsWith('{') ? line : null;\n      })\n  ).map((line) => {\n    const inner = line.match(/{(.*)}/)?.[1];\n\n    if (!inner) return null;\n\n    return Object.fromEntries(\n      filterBoolean(\n        inner\n          .trim()\n          .split(', ')\n          .map((item) => item.trim().match(/(?<key>[^:]+):(?<value>.+)/)?.groups)\n      ).map((item) => [item!.key, item!.value])\n    );\n  });\n\n  return filterBoolean(parsedLines.map(warnDestinationObject));\n}\n\nfunction coercePhysicalDevice(\n  device: Destination\n): Pick<AppleDevice.ConnectedDevice, 'udid' | 'name' | 'osType' | 'deviceType' | 'osVersion'> {\n  // physical device\n  return {\n    /** @example `00008101-001964A22629003A` */\n    udid: device.id,\n    /** @example `Evan's phone` */\n    name: device.name,\n    /** @example `iPhone13,4` */\n    // model: 'UNKNOWN',\n    /** @example `device` */\n    deviceType: 'device',\n    osType: coerceDestinationPlatformToOsType(device.platform),\n\n    osVersion: '',\n  };\n}\n\nfunction coerceSimulatorDevice(\n  device: Destination\n): Pick<\n  SimControl.Device,\n  | 'udid'\n  | 'name'\n  | 'osType'\n  | 'osVersion'\n  | 'runtime'\n  | 'isAvailable'\n  | 'deviceTypeIdentifier'\n  | 'state'\n  | 'windowName'\n> {\n  // simulator\n  return {\n    /** '00E55DC0-0364-49DF-9EC6-77BE587137D4' */\n    udid: device.id,\n    /** 'com.apple.CoreSimulator.SimRuntime.iOS-15-1' */\n    runtime: '',\n    /** If the device is \"available\" which generally means that the OS files haven't been deleted (this can happen when Xcode updates).  */\n    isAvailable: true,\n\n    deviceTypeIdentifier: '',\n\n    state: 'Shutdown',\n    /** 'iPhone 13 Pro' */\n    name: device.name,\n    /** Type of OS the device uses. */\n    osType: device.platform === 'visionOS Simulator' ? 'xrOS' : 'iOS',\n    /** '15.1' */\n    osVersion: device.OS!,\n    /** 'iPhone 13 Pro (15.1)' */\n    windowName: `${device.name} (${device.OS})`,\n  };\n}\n\nfunction coerceDestinationObjectToKnownDeviceType(device: Destination) {\n  if (device.arch) {\n    // physical device\n    return coercePhysicalDevice(device);\n  } else if (device.OS) {\n    // simulator\n    return coerceSimulatorDevice(device);\n  } else {\n    // \"Any device\"\n    return null;\n  }\n}\n\nexport async function resolveDestinationsAsync(\n  props: Pick<BuildProps, 'configuration' | 'scheme' | 'xcodeProject'>\n): Promise<{ name: string; osType: OSType; osVersion: string; udid: string }[]> {\n  // xcodebuild -workspace /Users/evanbacon/Documents/GitHub/lab/apr23/ios/apr23.xcworkspace -configuration Debug -scheme apr23 -showdestinations -json\n\n  const { stdout } = await spawnAsync('xcodebuild', [\n    props.xcodeProject.isWorkspace ? '-workspace' : '-project',\n    props.xcodeProject.name,\n    '-configuration',\n    props.configuration,\n    '-scheme',\n    props.scheme,\n    '-showdestinations',\n    '-quiet',\n  ]);\n\n  //   console.log(JSON.stringify(stdout, null, 2));\n\n  const destinationObjects = parseXcodeDestinationString(stdout);\n\n  return filterBoolean(destinationObjects.map(coerceDestinationObjectToKnownDeviceType));\n}\n"],"names":["resolveDestinationsAsync","debug","require","coerceDestinationPlatformToOsType","platform","filterBoolean","array","filter","Boolean","warnDestinationObject","obj","Log","warn","parseXcodeDestinationString","str","parsedLines","trim","split","map","line","startsWith","inner","match","Object","fromEntries","item","groups","key","value","coercePhysicalDevice","device","udid","id","name","deviceType","osType","osVersion","coerceSimulatorDevice","runtime","isAvailable","deviceTypeIdentifier","state","OS","windowName","coerceDestinationObjectToKnownDeviceType","arch","props","stdout","spawnAsync","xcodeProject","isWorkspace","configuration","scheme","destinationObjects"],"mappings":"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"}