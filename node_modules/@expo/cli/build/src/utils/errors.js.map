{"version":3,"sources":["../../../src/utils/errors.ts"],"sourcesContent":["import { AssertionError } from 'assert';\nimport chalk from 'chalk';\n\nimport { exit } from '../log';\n\nconst ERROR_PREFIX = 'Error: ';\n\n/**\n * General error, formatted as a message in red text when caught by expo-cli (no stack trace is printed). Should be used in favor of `log.error()` in most cases.\n */\nexport class CommandError extends Error {\n  name = 'CommandError';\n  readonly isCommandError = true;\n\n  constructor(\n    public code: string,\n    message: string = ''\n  ) {\n    super('');\n    // If e.toString() was called to get `message` we don't want it to look\n    // like \"Error: Error:\".\n    if (message.startsWith(ERROR_PREFIX)) {\n      message = message.substring(ERROR_PREFIX.length);\n    }\n\n    this.message = message || code;\n  }\n}\n\nexport class AbortCommandError extends CommandError {\n  constructor() {\n    super('ABORTED', 'Interactive prompt was cancelled.');\n  }\n}\n\n/**\n * Used to end a CLI process without printing a stack trace in the Expo CLI. Should be used in favor of `process.exit`.\n */\nexport class SilentError extends CommandError {\n  constructor(messageOrError?: string | Error) {\n    const message =\n      (typeof messageOrError === 'string' ? messageOrError : messageOrError?.message) ??\n      'This error should fail silently in the CLI';\n    super('SILENT', message);\n    if (typeof messageOrError !== 'string') {\n      // forward the props of the incoming error for tests or processes outside of expo-cli that use expo cli internals.\n      this.stack = messageOrError?.stack ?? this.stack;\n      this.name = messageOrError?.name ?? this.name;\n    }\n  }\n}\n\nexport function logCmdError(error: any): never {\n  if (!(error instanceof Error)) {\n    throw error;\n  }\n  if (error instanceof AbortCommandError || error instanceof SilentError) {\n    // Do nothing, this is used for prompts or other cases that were custom logged.\n    process.exit(0);\n  } else if (\n    error instanceof CommandError ||\n    error instanceof AssertionError ||\n    error.name === 'ApiV2Error' ||\n    error.name === 'ConfigError'\n  ) {\n    // Print the stack trace in debug mode only.\n    exit(error);\n  }\n\n  const errorDetails = error.stack ? '\\n' + chalk.gray(error.stack) : '';\n\n  exit(chalk.red(error.toString()) + errorDetails);\n}\n\n/** This should never be thrown in production. */\nexport class UnimplementedError extends Error {\n  constructor() {\n    super('Unimplemented');\n    this.name = 'UnimplementedError';\n  }\n}\n"],"names":["CommandError","AbortCommandError","SilentError","logCmdError","UnimplementedError","ERROR_PREFIX","Error","constructor","code","message","name","isCommandError","startsWith","substring","length","messageOrError","stack","error","process","exit","AssertionError","errorDetails","chalk","gray","red","toString"],"mappings":"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"}