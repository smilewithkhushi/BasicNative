{"version":3,"sources":["../../../../../../src/run/ios/appleDevice/protocol/LockdownProtocol.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport plist from '@expo/plist';\nimport Debug from 'debug';\nimport { Socket } from 'net';\n\nimport type { ProtocolWriter } from './AbstractProtocol';\nimport { PlistProtocolReader, ProtocolClient, ProtocolReaderFactory } from './AbstractProtocol';\nimport { CommandError } from '../../../../utils/errors';\n\nconst debug = Debug('expo:apple-device:protocol:lockdown');\nexport const LOCKDOWN_HEADER_SIZE = 4;\n\nexport interface LockdownCommand {\n  Command: string;\n  [key: string]: any;\n}\n\nexport interface LockdownResponse {\n  Status: string;\n  [key: string]: any;\n}\n\nexport interface LockdownErrorResponse {\n  Error: string;\n  Request?: string;\n  Service?: string;\n}\n\nexport interface LockdownRequest {\n  Request: string;\n  [key: string]: any;\n}\n\nfunction isDefined(val: any) {\n  return typeof val !== 'undefined';\n}\n\nexport function isLockdownResponse(resp: any): resp is LockdownResponse {\n  return isDefined(resp.Status);\n}\n\nexport function isLockdownErrorResponse(resp: any): resp is LockdownErrorResponse {\n  return isDefined(resp.Error);\n}\n\nexport class LockdownProtocolClient<\n  MessageType extends LockdownRequest | LockdownCommand = LockdownRequest,\n> extends ProtocolClient<MessageType> {\n  constructor(socket: Socket) {\n    super(socket, new ProtocolReaderFactory(LockdownProtocolReader), new LockdownProtocolWriter());\n  }\n}\n\nexport class LockdownProtocolReader extends PlistProtocolReader {\n  constructor(callback: (data: any) => any) {\n    super(LOCKDOWN_HEADER_SIZE, callback);\n  }\n\n  parseHeader(data: Buffer) {\n    return data.readUInt32BE(0);\n  }\n\n  parseBody(data: Buffer) {\n    const resp = super.parseBody(data);\n    debug(`Response: ${JSON.stringify(resp)}`);\n    if (isLockdownErrorResponse(resp)) {\n      if (resp.Error === 'DeviceLocked') {\n        throw new CommandError('APPLE_DEVICE_LOCKED', 'Device is currently locked.');\n      }\n\n      if (resp.Error === 'InvalidService') {\n        let errorMessage = `${resp.Error}: ${resp.Service} (request: ${resp.Request})`;\n        if (resp.Service === 'com.apple.debugserver') {\n          errorMessage +=\n            '\\nTry reconnecting your device. You can also debug service logs with `export DEBUG=expo:xdl:ios:*`';\n        }\n        throw new CommandError('APPLE_DEVICE_LOCKDOWN', errorMessage);\n      }\n\n      throw new CommandError('APPLE_DEVICE_LOCKDOWN', resp.Error);\n    }\n    return resp;\n  }\n}\n\nexport class LockdownProtocolWriter implements ProtocolWriter {\n  write(socket: Socket, plistData: any) {\n    debug(`socket write: ${JSON.stringify(plistData)}`);\n    const plistMessage = plist.build(plistData);\n    const header = Buffer.alloc(LOCKDOWN_HEADER_SIZE);\n    header.writeUInt32BE(plistMessage.length, 0);\n    socket.write(header);\n    socket.write(plistMessage);\n  }\n}\n"],"names":["LOCKDOWN_HEADER_SIZE","isLockdownResponse","isLockdownErrorResponse","LockdownProtocolClient","LockdownProtocolReader","LockdownProtocolWriter","debug","Debug","isDefined","val","resp","Status","Error","ProtocolClient","constructor","socket","ProtocolReaderFactory","PlistProtocolReader","callback","parseHeader","data","readUInt32BE","parseBody","JSON","stringify","CommandError","errorMessage","Service","Request","write","plistData","plistMessage","plist","build","header","Buffer","alloc","writeUInt32BE","length"],"mappings":"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"}