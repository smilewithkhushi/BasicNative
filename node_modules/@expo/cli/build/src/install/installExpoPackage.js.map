{"version":3,"sources":["../../../src/install/installExpoPackage.ts"],"sourcesContent":["import * as PackageManager from '@expo/package-manager';\nimport spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\n\nimport * as Log from '../log';\nimport { getRunningProcess } from '../utils/getRunningProcess';\n\n/**\n * Given a list of incompatible packages, installs the correct versions of the packages with the package manager used for the project.\n * This exits immediately after spawning the install command, since the command shouldn't remain running while it is being updated.\n */\nexport async function installExpoPackageAsync(\n  projectRoot: string,\n  {\n    packageManager,\n    packageManagerArguments,\n    expoPackageToInstall,\n    followUpCommandArgs,\n  }: {\n    /** Package manager to use when installing the versioned packages. */\n    packageManager: PackageManager.NodePackageManager;\n    /**\n     * Extra parameters to pass to the `packageManager` when installing versioned packages.\n     * @example ['--no-save']\n     */\n    packageManagerArguments: string[];\n    expoPackageToInstall: string;\n    followUpCommandArgs: string[];\n  }\n) {\n  // Check if there's potentially a dev server running in the current folder and warn about it\n  // (not guaranteed to be Expo CLI, and the CLI isn't always running on 8081, but it's a good guess)\n  const isExpoMaybeRunningForProject = !!(await getRunningProcess(8081));\n\n  if (isExpoMaybeRunningForProject) {\n    Log.warn(\n      'The Expo CLI appears to be running this project in another terminal window. Close and restart any Expo CLI instances after the installation to complete the update.'\n    );\n  }\n\n  // Safe to use current process to upgrade Expo package- doesn't affect current process\n  try {\n    await packageManager.addAsync([...packageManagerArguments, expoPackageToInstall]);\n  } catch (error) {\n    Log.error(\n      chalk`Cannot install the latest Expo package. Install {bold expo@latest} with ${packageManager.name} and then run {bold npx expo install} again.`\n    );\n    throw error;\n  }\n\n  Log.log(chalk`\\u203A Running {bold npx expo install} under the updated expo version`);\n\n  let commandSegments = ['expo', 'install', ...followUpCommandArgs];\n  if (packageManagerArguments.length) {\n    commandSegments = [...commandSegments, '--', ...packageManagerArguments];\n  }\n\n  Log.log('> ' + commandSegments.join(' '));\n\n  // Spawn a new process to install the rest of the packages, as only then will the latest Expo package be used\n  if (followUpCommandArgs.length) {\n    await spawnAsync('npx', commandSegments, {\n      stdio: 'inherit',\n      cwd: projectRoot,\n      env: { ...process.env },\n    });\n  }\n}\n"],"names":["installExpoPackageAsync","projectRoot","packageManager","packageManagerArguments","expoPackageToInstall","followUpCommandArgs","isExpoMaybeRunningForProject","getRunningProcess","Log","warn","addAsync","error","chalk","name","log","commandSegments","length","join","spawnAsync","stdio","cwd","env","process"],"mappings":"AAAA;;;;+BAWsBA,yBAAuB;;aAAvBA,uBAAuB;;;8DAVtB,mBAAmB;;;;;;;8DACxB,OAAO;;;;;;2DAEJ,QAAQ;mCACK,4BAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvD,eAAeA,uBAAuB,CAC3CC,WAAmB,EACnB,EACEC,cAAc,CAAA,EACdC,uBAAuB,CAAA,EACvBC,oBAAoB,CAAA,EACpBC,mBAAmB,CAAA,EAWpB,EACD;IACA,4FAA4F;IAC5F,mGAAmG;IACnG,MAAMC,4BAA4B,GAAG,CAAC,CAAE,MAAMC,IAAAA,kBAAiB,kBAAA,EAAC,IAAI,CAAC,AAAC,AAAC;IAEvE,IAAID,4BAA4B,EAAE;QAChCE,IAAG,CAACC,IAAI,CACN,qKAAqK,CACtK,CAAC;IACJ,CAAC;IAED,sFAAsF;IACtF,IAAI;QACF,MAAMP,cAAc,CAACQ,QAAQ,CAAC;eAAIP,uBAAuB;YAAEC,oBAAoB;SAAC,CAAC,CAAC;IACpF,EAAE,OAAOO,KAAK,EAAE;QACdH,IAAG,CAACG,KAAK,CACPC,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,wEAAwE,EAAEV,cAAc,CAACW,IAAI,CAAC,4CAA4C,CAAC,CAClJ,CAAC;QACF,MAAMF,KAAK,CAAC;IACd,CAAC;IAEDH,IAAG,CAACM,GAAG,CAACF,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,qEAAqE,CAAC,CAAC,CAAC;IAEtF,IAAIG,eAAe,GAAG;QAAC,MAAM;QAAE,SAAS;WAAKV,mBAAmB;KAAC,AAAC;IAClE,IAAIF,uBAAuB,CAACa,MAAM,EAAE;QAClCD,eAAe,GAAG;eAAIA,eAAe;YAAE,IAAI;eAAKZ,uBAAuB;SAAC,CAAC;IAC3E,CAAC;IAEDK,IAAG,CAACM,GAAG,CAAC,IAAI,GAAGC,eAAe,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAE1C,6GAA6G;IAC7G,IAAIZ,mBAAmB,CAACW,MAAM,EAAE;QAC9B,MAAME,IAAAA,WAAU,EAAA,QAAA,EAAC,KAAK,EAAEH,eAAe,EAAE;YACvCI,KAAK,EAAE,SAAS;YAChBC,GAAG,EAAEnB,WAAW;YAChBoB,GAAG,EAAE;gBAAE,GAAGC,OAAO,CAACD,GAAG;aAAE;SACxB,CAAC,CAAC;IACL,CAAC;AACH,CAAC"}