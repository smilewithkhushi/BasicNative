{"version":3,"sources":["../../../../src/api/user/expoSsoLauncher.ts"],"sourcesContent":["import assert from 'assert';\nimport openBrowserAsync from 'better-opn';\nimport http from 'http';\nimport { Socket } from 'node:net';\nimport querystring from 'querystring';\n\nimport * as Log from '../../log';\n\nconst successBody = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <title>Expo SSO Login</title>\n  <meta charset=\"utf-8\">\n  <style type=\"text/css\">\n    html {\n      margin: 0;\n      padding: 0\n    }\n\n    body {\n      background-color: #fff;\n      font-family: Tahoma,Verdana;\n      font-size: 16px;\n      color: #000;\n      max-width: 100%;\n      box-sizing: border-box;\n      padding: .5rem;\n      margin: 1em;\n      overflow-wrap: break-word\n    }\n  </style>\n</head>\n<body>\n  SSO login complete. You may now close this tab and return to the command prompt.\n</body>\n</html>`;\n\nexport async function getSessionUsingBrowserAuthFlowAsync({\n  expoWebsiteUrl,\n}: {\n  expoWebsiteUrl: string;\n}): Promise<string> {\n  const scheme = 'http';\n  const hostname = 'localhost';\n  const path = '/auth/callback';\n\n  const buildExpoSsoLoginUrl = (port: number): string => {\n    const data = {\n      app_redirect_uri: `${scheme}://${hostname}:${port}${path}`,\n    };\n    const params = querystring.stringify(data);\n    return `${expoWebsiteUrl}/sso-login?${params}`;\n  };\n\n  // Start server and begin auth flow\n  const executeAuthFlow = (): Promise<string> => {\n    return new Promise<string>(async (resolve, reject) => {\n      const connections = new Set<Socket>();\n\n      const server = http.createServer(\n        (request: http.IncomingMessage, response: http.ServerResponse) => {\n          try {\n            if (!(request.method === 'GET' && request.url?.includes(path))) {\n              throw new Error('Unexpected SSO login response.');\n            }\n            const url = new URL(request.url, `http:${request.headers.host}`);\n            const sessionSecret = url.searchParams.get('session_secret');\n\n            if (!sessionSecret) {\n              throw new Error('Request missing session_secret search parameter.');\n            }\n            resolve(sessionSecret);\n            response.writeHead(200, { 'Content-Type': 'text/html' });\n            response.write(successBody);\n            response.end();\n          } catch (error) {\n            reject(error);\n          } finally {\n            server.close();\n            // Ensure that the server shuts down\n            for (const connection of connections) {\n              connection.destroy();\n            }\n          }\n        }\n      );\n\n      server.listen(0, hostname, () => {\n        Log.log('Waiting for browser login...');\n\n        const address = server.address();\n        assert(\n          address !== null && typeof address === 'object',\n          'Server address and port should be set after listening has begun'\n        );\n        const port = address.port;\n        const authorizeUrl = buildExpoSsoLoginUrl(port);\n        openBrowserAsync(authorizeUrl);\n      });\n\n      server.on('connection', (connection) => {\n        connections.add(connection);\n\n        connection.on('close', () => {\n          connections.delete(connection);\n        });\n      });\n    });\n  };\n\n  return await executeAuthFlow();\n}\n"],"names":["getSessionUsingBrowserAuthFlowAsync","successBody","expoWebsiteUrl","scheme","hostname","path","buildExpoSsoLoginUrl","port","data","app_redirect_uri","params","querystring","stringify","executeAuthFlow","Promise","resolve","reject","connections","Set","server","http","createServer","request","response","method","url","includes","Error","URL","headers","host","sessionSecret","searchParams","get","writeHead","write","end","error","close","connection","destroy","listen","Log","log","address","assert","authorizeUrl","openBrowserAsync","on","add","delete"],"mappings":"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"}