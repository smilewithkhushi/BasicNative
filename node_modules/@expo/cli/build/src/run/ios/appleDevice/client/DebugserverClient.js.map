{"version":3,"sources":["../../../../../../src/run/ios/appleDevice/client/DebugserverClient.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Debug from 'debug';\nimport { Socket } from 'net';\nimport * as path from 'path';\n\nimport { ServiceClient } from './ServiceClient';\nimport { GDBProtocolClient } from '../protocol/GDBProtocol';\n\nconst debug = Debug('expo:apple-device:client:debugserver');\n\nexport class DebugserverClient extends ServiceClient<GDBProtocolClient> {\n  constructor(public socket: Socket) {\n    super(socket, new GDBProtocolClient(socket));\n  }\n\n  async setMaxPacketSize(size: number) {\n    return this.sendCommand('QSetMaxPacketSize:', [size.toString()]);\n  }\n\n  async setWorkingDir(workingDir: string) {\n    return this.sendCommand('QSetWorkingDir:', [workingDir]);\n  }\n\n  async checkLaunchSuccess() {\n    return this.sendCommand('qLaunchSuccess', []);\n  }\n\n  async attachByName(name: string) {\n    const hexName = Buffer.from(name).toString('hex');\n    return this.sendCommand(`vAttachName;${hexName}`, []);\n  }\n\n  async continue() {\n    return this.sendCommand('c', []);\n  }\n\n  halt() {\n    // ^C\n    debug('Sending ^C to debugserver');\n    return this.protocolClient.socket.write('\\u0003');\n  }\n\n  async kill() {\n    debug(`kill`);\n    const msg: any = { cmd: 'k', args: [] };\n    return this.protocolClient.sendMessage(msg, (resp: string, resolve: any) => {\n      debug(`kill:response: ${resp}`);\n      this.protocolClient.socket.write('+');\n      const parts = resp.split(';');\n      for (const part of parts) {\n        if (part.includes('description')) {\n          // description:{hex encoded message like: \"Terminated with signal 9\"}\n          resolve(Buffer.from(part.split(':')[1], 'hex').toString('ascii'));\n        }\n      }\n    });\n  }\n\n  // TODO support app args\n  // https://sourceware.org/gdb/onlinedocs/gdb/Packets.html#Packets\n  // A arglen,argnum,arg,\n  async launchApp(appPath: string, executableName: string) {\n    const fullPath = path.join(appPath, executableName);\n    const hexAppPath = Buffer.from(fullPath).toString('hex');\n    const appCommand = `A${hexAppPath.length},0,${hexAppPath}`;\n    return this.sendCommand(appCommand, []);\n  }\n\n  async sendCommand(cmd: string, args: string[]) {\n    const msg = { cmd, args };\n    debug(`Sending command: ${cmd}, args: ${args}`);\n    const resp = await this.protocolClient.sendMessage(msg);\n    // we need to ACK as well\n    this.protocolClient.socket.write('+');\n    return resp;\n  }\n}\n"],"names":["DebugserverClient","debug","Debug","ServiceClient","constructor","socket","GDBProtocolClient","setMaxPacketSize","size","sendCommand","toString","setWorkingDir","workingDir","checkLaunchSuccess","attachByName","name","hexName","Buffer","from","continue","halt","protocolClient","write","kill","msg","cmd","args","sendMessage","resp","resolve","parts","split","part","includes","launchApp","appPath","executableName","fullPath","path","join","hexAppPath","appCommand","length"],"mappings":"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"}