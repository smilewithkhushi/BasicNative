{"version":3,"sources":["../../../../src/utils/analytics/getDevClientProperties.ts"],"sourcesContent":["import { ExpoConfig, getAccountUsername, getDefaultTarget, getPackageJson } from '@expo/config';\nimport JsonFile, { JSONValue } from '@expo/json-file';\nimport resolveFrom from 'resolve-from';\n\nimport { memoize } from '../fn';\n\nconst getAccountName = memoize((exp: Pick<ExpoConfig, 'owner'>) => {\n  return getAccountUsername(exp);\n});\n\n/** @returns true if the expo-dev-client package is found in the project `package.json` file. */\nexport function hasDirectDevClientDependency(projectRoot: string): boolean {\n  const pkg = getPackageJson(projectRoot);\n  return !!pkg.dependencies?.['expo-dev-client'] || !!pkg.devDependencies?.['expo-dev-client'];\n}\n\nconst getDevClientVersion = memoize((projectRoot: string): JSONValue | undefined => {\n  try {\n    const devClientPackage = resolveFrom.silent(projectRoot, 'expo-dev-client/package.json');\n    if (devClientPackage) {\n      return JsonFile.read(devClientPackage).version;\n    }\n  } catch {}\n  return undefined;\n});\n\nconst getProjectType = memoize((projectRoot: string): 'managed' | 'generic' => {\n  return getDefaultTarget(projectRoot) === 'managed' ? 'managed' : 'generic';\n});\n\nexport default function getDevClientProperties(projectRoot: string, exp: ExpoConfig) {\n  return {\n    account_name: getAccountName({ owner: exp.owner }),\n    dev_client_version: getDevClientVersion(projectRoot),\n    project_type: getProjectType(projectRoot),\n    uptime_ms: process.uptime() * 1000,\n  };\n}\n"],"names":["hasDirectDevClientDependency","getDevClientProperties","getAccountName","memoize","exp","getAccountUsername","projectRoot","pkg","getPackageJson","dependencies","devDependencies","getDevClientVersion","devClientPackage","resolveFrom","silent","JsonFile","read","version","undefined","getProjectType","getDefaultTarget","account_name","owner","dev_client_version","project_type","uptime_ms","process","uptime"],"mappings":"AAAA;;;;;;;;;;;IAWgBA,4BAA4B,MAA5BA,4BAA4B;IAmB5C,OAOC,MAPuBC,sBAAsB;;;yBA9BmC,cAAc;;;;;;;8DAC3D,iBAAiB;;;;;;;8DAC7B,cAAc;;;;;;oBAEd,OAAO;;;;;;AAE/B,MAAMC,cAAc,GAAGC,IAAAA,GAAO,QAAA,EAAC,CAACC,GAA8B,GAAK;IACjE,OAAOC,IAAAA,OAAkB,EAAA,mBAAA,EAACD,GAAG,CAAC,CAAC;AACjC,CAAC,CAAC,AAAC;AAGI,SAASJ,4BAA4B,CAACM,WAAmB,EAAW;QAEhEC,GAAgB,EAA2BA,IAAmB;IADvE,MAAMA,GAAG,GAAGC,IAAAA,OAAc,EAAA,eAAA,EAACF,WAAW,CAAC,AAAC;IACxC,OAAO,CAAC,CAACC,CAAAA,CAAAA,GAAgB,GAAhBA,GAAG,CAACE,YAAY,SAAqB,GAArCF,KAAAA,CAAqC,GAArCA,GAAgB,AAAE,CAAC,iBAAiB,CAAC,CAAA,IAAI,CAAC,CAACA,CAAAA,CAAAA,IAAmB,GAAnBA,GAAG,CAACG,eAAe,SAAqB,GAAxCH,KAAAA,CAAwC,GAAxCA,IAAmB,AAAE,CAAC,iBAAiB,CAAC,CAAA,CAAC;AAC/F,CAAC;AAED,MAAMI,mBAAmB,GAAGR,IAAAA,GAAO,QAAA,EAAC,CAACG,WAAmB,GAA4B;IAClF,IAAI;QACF,MAAMM,gBAAgB,GAAGC,YAAW,EAAA,QAAA,CAACC,MAAM,CAACR,WAAW,EAAE,8BAA8B,CAAC,AAAC;QACzF,IAAIM,gBAAgB,EAAE;YACpB,OAAOG,SAAQ,EAAA,QAAA,CAACC,IAAI,CAACJ,gBAAgB,CAAC,CAACK,OAAO,CAAC;QACjD,CAAC;IACH,EAAE,OAAM,CAAC,CAAC;IACV,OAAOC,SAAS,CAAC;AACnB,CAAC,CAAC,AAAC;AAEH,MAAMC,cAAc,GAAGhB,IAAAA,GAAO,QAAA,EAAC,CAACG,WAAmB,GAA4B;IAC7E,OAAOc,IAAAA,OAAgB,EAAA,iBAAA,EAACd,WAAW,CAAC,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS,CAAC;AAC7E,CAAC,CAAC,AAAC;AAEY,SAASL,sBAAsB,CAACK,WAAmB,EAAEF,GAAe,EAAE;IACnF,OAAO;QACLiB,YAAY,EAAEnB,cAAc,CAAC;YAAEoB,KAAK,EAAElB,GAAG,CAACkB,KAAK;SAAE,CAAC;QAClDC,kBAAkB,EAAEZ,mBAAmB,CAACL,WAAW,CAAC;QACpDkB,YAAY,EAAEL,cAAc,CAACb,WAAW,CAAC;QACzCmB,SAAS,EAAEC,OAAO,CAACC,MAAM,EAAE,GAAG,IAAI;KACnC,CAAC;AACJ,CAAC"}