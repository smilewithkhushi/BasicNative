{"version":3,"sources":["../../../src/start/index.ts"],"sourcesContent":["#!/usr/bin/env node\nimport chalk from 'chalk';\n\nimport { Command } from '../../bin/cli';\nimport { assertArgs, getProjectRoot, printHelp } from '../utils/args';\nimport { logCmdError } from '../utils/errors';\n\nexport const expoStart: Command = async (argv) => {\n  const args = assertArgs(\n    {\n      // Types\n      '--help': Boolean,\n      '--clear': Boolean,\n      '--max-workers': Number,\n      '--no-dev': Boolean,\n      '--minify': Boolean,\n      '--https': Boolean,\n      '--private-key-path': String,\n      '--port': Number,\n      '--dev-client': Boolean,\n      '--scheme': String,\n      '--android': Boolean,\n      '--ios': Boolean,\n      '--web': Boolean,\n      '--host': String,\n      '--tunnel': Boolean,\n      '--lan': Boolean,\n      '--localhost': Boolean,\n      '--offline': Boolean,\n      '--go': Boolean,\n      // Aliases\n      '-h': '--help',\n      '-c': '--clear',\n      '-p': '--port',\n      '-a': '--android',\n      '-i': '--ios',\n      '-w': '--web',\n      '-m': '--host',\n      '-d': '--dev-client',\n      '-g': '--go',\n      // Alias for adding interop with the Metro docs and RedBox errors.\n      '--reset-cache': '--clear',\n    },\n    argv\n  );\n\n  if (args['--help']) {\n    printHelp(\n      `Start a local dev server for the app`,\n      chalk`npx expo start {dim <dir>}`,\n      [\n        chalk`<dir>                           Directory of the Expo project. {dim Default: Current working directory}`,\n        `-a, --android                   Open on a connected Android device`,\n        `-i, --ios                       Open in an iOS simulator`,\n        `-w, --web                       Open in a web browser`,\n        ``,\n        chalk`-d, --dev-client                Launch in a custom native app`,\n        chalk`-g, --go                        Launch in Expo Go`,\n        ``,\n        `-c, --clear                     Clear the bundler cache`,\n        `--max-workers <number>          Maximum number of tasks to allow Metro to spawn`,\n        `--no-dev                        Bundle in production mode`,\n        `--minify                        Minify JavaScript`,\n        ``,\n        chalk`-m, --host <string>             Dev server hosting type. {dim Default: lan}`,\n        chalk`                                {bold lan}: Use the local network`,\n        chalk`                                {bold tunnel}: Use any network by tunnel through ngrok`,\n        chalk`                                {bold localhost}: Connect to the dev server over localhost`,\n        `--tunnel                        Same as --host tunnel`,\n        `--lan                           Same as --host lan`,\n        `--localhost                     Same as --host localhost`,\n        ``,\n        `--offline                       Skip network requests and use anonymous manifest signatures`,\n        `--https                         Start the dev server with https protocol`,\n        `--scheme <scheme>               Custom URI protocol to use when launching an app`,\n        chalk`-p, --port <number>             Port to start the dev server on (does not apply to web or tunnel). {dim Default: 8081}`,\n        ``,\n        chalk`--private-key-path <path>       Path to private key for code signing. {dim Default: \"private-key.pem\" in the same directory as the certificate specified by the expo-updates configuration in app.json.}`,\n        `-h, --help                      Usage info`,\n      ].join('\\n')\n    );\n  }\n\n  const projectRoot = getProjectRoot(args);\n  const { resolveOptionsAsync } = await import('./resolveOptions.js');\n  const options = await resolveOptionsAsync(projectRoot, args).catch(logCmdError);\n\n  if (options.offline) {\n    const { disableNetwork } = await import('../api/settings.js');\n    disableNetwork();\n  }\n\n  const { startAsync } = await import('./startAsync.js');\n  return startAsync(projectRoot, options, { webOnly: false }).catch(logCmdError);\n};\n"],"names":["expoStart","argv","args","assertArgs","Boolean","Number","String","printHelp","chalk","join","projectRoot","getProjectRoot","resolveOptionsAsync","options","catch","logCmdError","offline","disableNetwork","startAsync","webOnly"],"mappings":"AAAA;;;;;+BAOaA,WAAS;;aAATA,SAAS;;;8DANJ,OAAO;;;;;;sBAG6B,eAAe;wBACzC,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEtC,MAAMA,SAAS,GAAY,OAAOC,IAAI,GAAK;IAChD,MAAMC,IAAI,GAAGC,IAAAA,KAAU,WAAA,EACrB;QACE,QAAQ;QACR,QAAQ,EAAEC,OAAO;QACjB,SAAS,EAAEA,OAAO;QAClB,eAAe,EAAEC,MAAM;QACvB,UAAU,EAAED,OAAO;QACnB,UAAU,EAAEA,OAAO;QACnB,SAAS,EAAEA,OAAO;QAClB,oBAAoB,EAAEE,MAAM;QAC5B,QAAQ,EAAED,MAAM;QAChB,cAAc,EAAED,OAAO;QACvB,UAAU,EAAEE,MAAM;QAClB,WAAW,EAAEF,OAAO;QACpB,OAAO,EAAEA,OAAO;QAChB,OAAO,EAAEA,OAAO;QAChB,QAAQ,EAAEE,MAAM;QAChB,UAAU,EAAEF,OAAO;QACnB,OAAO,EAAEA,OAAO;QAChB,aAAa,EAAEA,OAAO;QACtB,WAAW,EAAEA,OAAO;QACpB,MAAM,EAAEA,OAAO;QACf,UAAU;QACV,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,WAAW;QACjB,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,cAAc;QACpB,IAAI,EAAE,MAAM;QACZ,kEAAkE;QAClE,eAAe,EAAE,SAAS;KAC3B,EACDH,IAAI,CACL,AAAC;IAEF,IAAIC,IAAI,CAAC,QAAQ,CAAC,EAAE;QAClBK,IAAAA,KAAS,UAAA,EACP,CAAC,oCAAoC,CAAC,EACtCC,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,0BAA0B,CAAC,EACjC;YACEA,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,uGAAuG,CAAC;YAC9G,CAAC,kEAAkE,CAAC;YACpE,CAAC,wDAAwD,CAAC;YAC1D,CAAC,qDAAqD,CAAC;YACvD,CAAC,CAAC;YACFA,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,6DAA6D,CAAC;YACpEA,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,iDAAiD,CAAC;YACxD,CAAC,CAAC;YACF,CAAC,uDAAuD,CAAC;YACzD,CAAC,+EAA+E,CAAC;YACjF,CAAC,yDAAyD,CAAC;YAC3D,CAAC,iDAAiD,CAAC;YACnD,CAAC,CAAC;YACFA,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,2EAA2E,CAAC;YAClFA,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,iEAAiE,CAAC;YACxEA,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,sFAAsF,CAAC;YAC7FA,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,0FAA0F,CAAC;YACjG,CAAC,qDAAqD,CAAC;YACvD,CAAC,kDAAkD,CAAC;YACpD,CAAC,wDAAwD,CAAC;YAC1D,CAAC,CAAC;YACF,CAAC,2FAA2F,CAAC;YAC7F,CAAC,wEAAwE,CAAC;YAC1E,CAAC,gFAAgF,CAAC;YAClFA,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,sHAAsH,CAAC;YAC7H,CAAC,CAAC;YACFA,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,wMAAwM,CAAC;YAC/M,CAAC,0CAA0C,CAAC;SAC7C,CAACC,IAAI,CAAC,IAAI,CAAC,CACb,CAAC;IACJ,CAAC;IAED,MAAMC,WAAW,GAAGC,IAAAA,KAAc,eAAA,EAACT,IAAI,CAAC,AAAC;IACzC,MAAM,EAAEU,mBAAmB,CAAA,EAAE,GAAG,MAAM,iEAAA,OAAM,CAAC,qBAAqB,GAAC,AAAC;IACpE,MAAMC,OAAO,GAAG,MAAMD,mBAAmB,CAACF,WAAW,EAAER,IAAI,CAAC,CAACY,KAAK,CAACC,OAAW,YAAA,CAAC,AAAC;IAEhF,IAAIF,OAAO,CAACG,OAAO,EAAE;QACnB,MAAM,EAAEC,cAAc,CAAA,EAAE,GAAG,MAAM,iEAAA,OAAM,CAAC,oBAAoB,GAAC,AAAC;QAC9DA,cAAc,EAAE,CAAC;IACnB,CAAC;IAED,MAAM,EAAEC,UAAU,CAAA,EAAE,GAAG,MAAM,iEAAA,OAAM,CAAC,iBAAiB,GAAC,AAAC;IACvD,OAAOA,UAAU,CAACR,WAAW,EAAEG,OAAO,EAAE;QAAEM,OAAO,EAAE,KAAK;KAAE,CAAC,CAACL,KAAK,CAACC,OAAW,YAAA,CAAC,CAAC;AACjF,CAAC,AAAC"}